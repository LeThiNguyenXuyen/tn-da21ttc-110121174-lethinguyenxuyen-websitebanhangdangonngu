import React from 'react';
import './PriceDisplay.css';

const PriceDisplay = ({
  originalPrice,
  discountedPrice,
  hasPromotion,
  promotion,
  size = 'medium',
  showSavings = true,
  className = '',
  // Th√™m prop ƒë·ªÉ hi·ªÉn th·ªã gi√° g·ªëc khi kh√¥ng c√≥ khuy·∫øn m√£i
  showOriginalPrice = true
}) => {
  const formatPrice = (price) => {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND'
    }).format(price);
  };

  // Ki·ªÉm tra xem c√≥ n√™n hi·ªÉn th·ªã gi√° g·∫°ch ngang kh√¥ng
  const shouldShowStrikethrough = () => {
    if (hasPromotion) return true;
    // Hi·ªÉn th·ªã gi√° g·∫°ch ngang n·∫øu c√≥ originalPrice v√† n√≥ kh√°c v·ªõi discountedPrice
    return showOriginalPrice && originalPrice && discountedPrice && originalPrice > discountedPrice;
  };

  // Ki·ªÉm tra xem khuy·∫øn m√£i c√≥ ƒëi·ªÅu ki·ªán kh√¥ng
  const hasPromotionCondition = () => {
    return hasPromotion && promotion && promotion.condition && promotion.condition.minOrderAmount > 0;
  };

  const getSavingsAmount = () => {
    if (hasPromotion) {
      return originalPrice - discountedPrice;
    }
    // T√≠nh ti·∫øt ki·ªám t·ª´ originalPrice n·∫øu kh√¥ng c√≥ khuy·∫øn m√£i
    if (originalPrice && discountedPrice && originalPrice > discountedPrice) {
      return originalPrice - discountedPrice;
    }
    return 0;
  };

  const getSavingsPercentage = () => {
    if (hasPromotion) {
      return Math.round(((originalPrice - discountedPrice) / originalPrice) * 100);
    }
    // T√≠nh ph·∫ßn trƒÉm ti·∫øt ki·ªám t·ª´ originalPrice n·∫øu kh√¥ng c√≥ khuy·∫øn m√£i
    if (originalPrice && discountedPrice && originalPrice > discountedPrice) {
      return Math.round(((originalPrice - discountedPrice) / originalPrice) * 100);
    }
    return 0;
  };

  const getSizeClass = () => {
    switch (size) {
      case 'small':
        return 'price-display-small';
      case 'large':
        return 'price-display-large';
      case 'extra-large':
        return 'price-display-extra-large';
      default:
        return 'price-display-medium';
    }
  };

  return (
    <div className={`price-display ${getSizeClass()} ${className}`}>
      <div className="price-container">
        {shouldShowStrikethrough() ? (
          <>
            {/* Gi√° sau gi·∫£m ho·∫∑c gi√° hi·ªán t·∫°i */}
            <span className="discounted-price">
              {hasPromotionCondition() ? formatPrice(originalPrice) : formatPrice(discountedPrice)}
            </span>

            {/* Gi√° g·ªëc b·ªã g·∫°ch - ch·ªâ hi·ªÉn th·ªã khi kh√¥ng c√≥ ƒëi·ªÅu ki·ªán khuy·∫øn m√£i */}
            {!hasPromotionCondition() && (
              <span className="original-price">
                {formatPrice(originalPrice)}
              </span>
            )}

            {/* Hi·ªÉn th·ªã s·ªë ti·ªÅn ti·∫øt ki·ªám - ch·ªâ khi kh√¥ng c√≥ ƒëi·ªÅu ki·ªán */}
            {showSavings && getSavingsAmount() > 0 && !hasPromotionCondition() && (
              <div className="savings-info">
                <span className="savings-amount">
                  Ti·∫øt ki·ªám: {formatPrice(getSavingsAmount())}
                </span>
                <span className="savings-percentage">
                  ({getSavingsPercentage()}%)
                </span>
              </div>
            )}

            {/* Th√¥ng tin khuy·∫øn m√£i */}
            {hasPromotion && promotion && (
              <div className="promotion-info">
                <span className="promotion-label">
                  üéâ {promotion.title}
                  {hasPromotionCondition() && (
                    <small className="promotion-condition">
                      <br />Mua t·ª´ {formatPrice(promotion.condition.minOrderAmount)} ƒë∆∞·ª£c gi·∫£m {promotion.value}%
                    </small>
                  )}
                </span>
              </div>
            )}
          </>
        ) : (
          /* Gi√° b√¨nh th∆∞·ªùng */
          <span className="normal-price">
            {formatPrice(discountedPrice || originalPrice)}
          </span>
        )}
      </div>
    </div>
  );
};

export default PriceDisplay;
